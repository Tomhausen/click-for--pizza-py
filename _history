{"entries":[{"timestamp":1711895570163,"editorVersion":"2.0.1","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"Timers\": \"github:microsoft/arcade-timers#v1.1.0\""],[0,"\n   "]],"start1":90,"start2":90,"length1":67,"length2":8}]}]},{"timestamp":1711896212868,"editorVersion":"2.0.1","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"@namespace\r\nclass SpriteKind:\r\n    buy = SpriteKind.create()\r\n    collider = SpriteKind.create()\r\n# bh2\r\n    upgrade_click = SpriteKind.create()\r\n# /bh2\r\n\r\n# variables\r\npizza_per_click = 1\r\npizza_per_second = 0\r\n# bh5\r\nbuttons_to_reset: List[Sprite] = []\r\n# /bh5\r\nstore_items: List[str] = [\r\n    \"NEW TOPPINGS\",\r\n    \"MORE OVENS\",\r\n    \"MORE WAITERS\",\r\n    \"MORE CHEFS\",\r\n# bh4\r\n    \"MORE RESTAURANTS\"\r\n# /bh4\r\n]\r\nstarting_cost = [\r\n    10,\r\n    100,\r\n    1000,\r\n    10000,\r\n# bh4\r\n    100000\r\n# /bh4\r\n]\r\npassive_increase_values = [1, 2, 5, 10, 20] # bh4\r\n\r\n# sprites\r\npizza_button = sprites.create(assets.image(\"pizza\"), SpriteKind.player)\r\npizza_button.x = 143\r\npizza_per_second_sprite = textsprite.create(str(pizza_per_second), 3, 1)\r\npizza_per_second_sprite.set_border(2, 3)\r\npizza_per_second_sprite.y = 20\r\npizza_per_second_sprite.right = 162\r\n# bh2\r\nclick_upgrade_button = sprites.create(assets.image(\"upgrade\"), SpriteKind.upgrade_click)\r\nclick_upgrade_button.scale = 2\r\nclick_upgrade_button.set_position(143, 90)\r\nsprites.set_data_number(click_upgrade_button, \"cost\", 100)\r\n# /bh2\r\n\r\n# setup\r\ninfo.set_score(0)\r\nscene.set_background_color(1)\r\n\r\n# bh2\r\ndef make_click_upgrade_cost_display():\r\n    if sprites.read_data_sprite(click_upgrade_button, \"cost_display\"):\r\n        sprites.read_data_sprite(click_upgrade_button, \"cost_display\").destroy()\r\n    cost = sprites.read_data_number(click_upgrade_button, \"cost\")\r\n    click_upgrade_cost_display = textsprite.create(str(cost), 5, 2)\r\n    click_upgrade_cost_display.set_position(143, 110)\r\nmake_click_upgrade_cost_display()\r\n# /bh2\r\n\r\ndef make_quantity_display(button: Sprite):\r\n    quantity = sprites.read_data_number(button, \"quantity\")\r\n    quantity_text = textsprite.create(str(quantity), 5, 2)\r\n    quantity_text.y = button.y + 10\r\n    quantity_text.left = 5\r\n    return quantity_text\r\n\r\ndef make_cost_display(button: Sprite):\r\n    cost = sprites.read_data_number(button, \"cost\")\r\n    cost_text = textsprite.create(str(cost), 5, 2)\r\n    cost_text.y = button.y + 10\r\n    cost_text.right = 80\r\n    return cost_text\r\n\r\ndef setup_buttons():\r\n    y = 10\r\n    for i in range(len(store_items)):\r\n        buy_button = textsprite.create(store_items[i], 5, 2)\r\n        buy_button.set_kind(SpriteKind.buy)\r\n        buy_button.set_flag(SpriteFlag.GHOST, False)\r\n        buy_button.y = y\r\n        buy_button.left = 5\r\n        sprites.set_data_number(buy_button, \"quantity\", 0)\r\n        sprites.set_data_number(buy_button, \"cost\", starting_cost[i])\r\n        sprites.set_data_number(buy_button, \"passive_increase_values\", passive_increase_values[i])\r\n        sprites.set_data_sprite(buy_button, \"quantity_text\", make_quantity_display(buy_button))\r\n        sprites.set_data_sprite(buy_button, \"cost_text\", make_cost_display(buy_button))\r\n        y += 20\r\nsetup_buttons()\r\n\r\ndef reigster_input(x, y):\r\n    collider = sprites.create(image.create(2, 2), SpriteKind.collider)\r\n    collider.set_position(x, y)\r\n    collider.image.fill(1)\r\n    collider.lifespan = 500\r\n    collider.set_flag(SpriteFlag.INVISIBLE, True)\r\nbrowserEvents.mouse_left.on_event(browserEvents.MouseButtonEvent.PRESSED, reigster_input)\r\n\r\n# bh3\r\ndef animate_click(collider: Sprite):\r\n    pizza = sprites.create(assets.image(\"pizza\"))\r\n    pizza.scale = 0.25\r\n    pizza.set_position(collider.x + 5, collider.y)\r\n    pizza.set_velocity(randint(-15, 15), -15)\r\n    pizza.ay = 50\r\n    pizza.lifespan = 1000\r\n    increase = textsprite.create(str(pizza_per_click), 0, 15)\r\n    increase.set_position(collider.x + randint(-8, 8), collider.y)\r\n    increase.vy = -5\r\n    increase.lifespan = 2000\r\n# /bh3\r\n\r\n# bh5\r\ndef reset_button():\r\n    buttons_to_reset.shift().scale = 1\r\n\r\ndef change_size(button: Sprite):\r\n    button.scale = 0.9\r\n    buttons_to_reset.append(button)\r\n    timer.after(100, reset_button)\r\n\r\ndef click_pizza(collider, pizza):\r\n# bh3\r\n    animate_click(collider)\r\n# /bh3\r\n    change_size(pizza)\r\n    info.change_score_by(pizza_per_click)\r\n    collider.destroy()\r\nsprites.on_overlap(SpriteKind.collider, SpriteKind.player, click_pizza)\r\n\r\ndef buy_more(collider, button):\r\n    global pizza_per_second\r\n    cost = sprites.read_data_number(button, \"cost\")\r\n    if cost > info.score():\r\n        music.buzzer.play()\r\n    else:\r\n        music.ba_ding.play()\r\n        info.change_score_by(-cost)\r\n        sprites.change_data_number_by(button, \"quantity\", 1)\r\n        sprites.read_data_sprite(button, \"quantity_text\").destroy()\r\n        sprites.set_data_sprite(button, \"quantity_text\", make_quantity_display(button))\r\n        sprites.change_data_number_by(button, \"cost\", (cost // 10) + 1)\r\n        sprites.read_data_sprite(button, \"cost_text\").destroy()\r\n        sprites.set_data_sprite(button, \"cost_text\", make_cost_display(button))\r\n        pizza_per_second += sprites.read_data_number(button, \"passive_increase_values\")\r\n        pizza_per_second_sprite.set_text(str(pizza_per_second))\r\n        pizza_per_second_sprite.right = 162\r\n    collider.destroy()\r\nsprites.on_overlap(SpriteKind.collider, SpriteKind.buy, buy_more)\r\n\r\n# bh2\r\ndef upgrade_click(collider, button):\r\n    global pizza_per_click\r\n    cost = sprites.read_data_number(button, \"cost\")\r\n    if cost > info.score():\r\n        music.buzzer.play()\r\n    else:\r\n        pizza_per_click *= 2\r\n        sprites.set_data_number(button, \"cost\", cost * 10)\r\n        make_click_upgrade_cost_display()\r\n    collider.destroy()\r\nsprites.on_overlap(SpriteKind.collider, SpriteKind.upgrade_click, upgrade_click)\r\n# /bh2\r\n\r\ndef passive_loop():\r\n    info.change_score_by(pizza_per_second)\r\ngame.on_update_interval(1000, passive_loop)\r\n\r\n# bh1\r\ndef falling_pizza():\r\n    pizzas_to_spawn = Math.ceil(pizza_per_second / 1000)\r\n    pizzas_to_spawn = Math.constrain(pizzas_to_spawn, 0, 50)\r\n    for i in range(pizzas_to_spawn):\r\n        pizza = sprites.create(assets.image(\"pizza\"), SpriteKind.projectile)\r\n        pizza.scale = 0.25\r\n        pizza.bottom = 1\r\n        pizza.x = randint(6, 154)\r\n        pizza.z = -100\r\n        pizza.vy = 5\r\n        pizza.set_flag(SpriteFlag.AUTO_DESTROY, True)\r\ngame.on_update_interval(2000, falling_pizza)\r\n# /bh1\r\n\r\n\r\n# bh3 animate click\r\n# bh1 pizza falling\r\n# bh2 upgrade per click - could be the guided\r\n# db? if not show how much a click is worth\r\n\r\n# bh4 more things you can buy\r\n# bh5 button affordance\r\n# upgrade a type of thing you've bought\r\n# achievements\r\n\r\n# random star that flies in\r\n\r\n"],[1,"music.ba_ding.play()"]],"start1":0,"start2":0,"length1":6390,"length2":20}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"namespace SpriteKind {\n    export const buy = SpriteKind.create()\n    export const collider = SpriteKind.create()\n    //  bh2\n    export const upgrade_click = SpriteKind.create()\n}\n\n//  /bh2\n//  variables\nlet pizza_per_click = 1\nlet pizza_per_second = 0\n//  bh5\nlet buttons_to_reset : Sprite[] = []\n//  /bh5\nlet store_items = [\"NEW TOPPINGS\", \"MORE OVENS\", \"MORE WAITERS\", \"MORE CHEFS\", \"MORE RESTAURANTS\"]\n//  bh4\n//  /bh4\nlet starting_cost = [10, 100, 1000, 10000, 100000]\n//  bh4\n//  /bh4\nlet passive_increase_values = [1, 2, 5, 10, 20]\n//  bh4\n//  sprites\nlet pizza_button = sprites.create(assets.image`pizza`, SpriteKind.Player)\npizza_button.x = 143\nlet pizza_per_second_sprite = textsprite.create(\"\" + pizza_per_second, 3, 1)\npizza_per_second_sprite.setBorder(2, 3)\npizza_per_second_sprite.y = 20\npizza_per_second_sprite.right = 162\n//  bh2\nlet click_upgrade_button = sprites.create(assets.image`upgrade`, SpriteKind.upgrade_click)\nclick_upgrade_button.scale = 2\nclick_upgrade_button.setPosition(143, 90)\nsprites.setDataNumber(click_upgrade_button, \"cost\", 100)\n//  /bh2\n//  setup\ninfo.setScore(0)\nscene.setBackgroundColor(1)\n//  bh2\nfunction make_click_upgrade_cost_display() {\n    if (sprites.readDataSprite(click_upgrade_button, \"cost_display\")) {\n        sprites.readDataSprite(click_upgrade_button, \"cost_display\").destroy()\n    }\n    \n    let cost = sprites.readDataNumber(click_upgrade_button, \"cost\")\n    let click_upgrade_cost_display = textsprite.create(\"\" + cost, 5, 2)\n    click_upgrade_cost_display.setPosition(143, 110)\n}\n\nmake_click_upgrade_cost_display()\n//  /bh2\nfunction make_quantity_display(button: Sprite): TextSprite {\n    let quantity = sprites.readDataNumber(button, \"quantity\")\n    let quantity_text = textsprite.create(\"\" + quantity, 5, 2)\n    quantity_text.y = button.y + 10\n    quantity_text.left = 5\n    return quantity_text\n}\n\nfunction make_cost_display(button: Sprite): TextSprite {\n    let cost = sprites.readDataNumber(button, \"cost\")\n    let cost_text = textsprite.create(\"\" + cost, 5, 2)\n    cost_text.y = button.y + 10\n    cost_text.right = 80\n    return cost_text\n}\n\nfunction setup_buttons() {\n    let buy_button: TextSprite;\n    let y = 10\n    for (let i = 0; i < store_items.length; i++) {\n        buy_button = textsprite.create(store_items[i], 5, 2)\n        buy_button.setKind(SpriteKind.buy)\n        buy_button.setFlag(SpriteFlag.Ghost, false)\n        buy_button.y = y\n        buy_button.left = 5\n        sprites.setDataNumber(buy_button, \"quantity\", 0)\n        sprites.setDataNumber(buy_button, \"cost\", starting_cost[i])\n        sprites.setDataNumber(buy_button, \"passive_increase_values\", passive_increase_values[i])\n        sprites.setDataSprite(buy_button, \"quantity_text\", make_quantity_display(buy_button))\n        sprites.setDataSprite(buy_button, \"cost_text\", make_cost_display(buy_button))\n        y += 20\n    }\n}\n\nsetup_buttons()\nbrowserEvents.MouseLeft.onEvent(browserEvents.MouseButtonEvent.Pressed, function reigster_input(x: number, y: number) {\n    let collider = sprites.create(image.create(2, 2), SpriteKind.collider)\n    collider.setPosition(x, y)\n    collider.image.fill(1)\n    collider.lifespan = 500\n    collider.setFlag(SpriteFlag.Invisible, true)\n})\n//  bh3\nfunction animate_click(collider: Sprite) {\n    let pizza = sprites.create(assets.image`pizza`)\n    pizza.scale = 0.25\n    pizza.setPosition(collider.x + 5, collider.y)\n    pizza.setVelocity(randint(-15, 15), -15)\n    pizza.ay = 50\n    pizza.lifespan = 1000\n    let increase = textsprite.create(\"\" + pizza_per_click, 0, 15)\n    increase.setPosition(collider.x + randint(-8, 8), collider.y)\n    increase.vy = -5\n    increase.lifespan = 2000\n}\n\n//  /bh3\n//  bh5\nfunction change_size(button: Sprite) {\n    button.scale = 0.9\n    music.thump.play()\n    buttons_to_reset.push(button)\n    timer.after(100, function reset_button() {\n        buttons_to_reset.shift().scale = 1\n    })\n}\n\nsprites.onOverlap(SpriteKind.collider, SpriteKind.Player, function click_pizza(collider: Sprite, pizza: Sprite) {\n    //  bh3\n    animate_click(collider)\n    //  /bh3\n    change_size(pizza)\n    info.changeScoreBy(pizza_per_click)\n    collider.destroy()\n})\nsprites.onOverlap(SpriteKind.collider, SpriteKind.buy, function buy_more(collider: Sprite, button: Sprite) {\n    \n    let cost = sprites.readDataNumber(button, \"cost\")\n    if (cost > info.score()) {\n        music.buzzer.play()\n    } else {\n        music.baDing.play()\n        info.changeScoreBy(-cost)\n        sprites.changeDataNumberBy(button, \"quantity\", 1)\n        sprites.readDataSprite(button, \"quantity_text\").destroy()\n        sprites.setDataSprite(button, \"quantity_text\", make_quantity_display(button))\n        sprites.changeDataNumberBy(button, \"cost\", Math.idiv(cost, 10) + 1)\n        sprites.readDataSprite(button, \"cost_text\").destroy()\n        sprites.setDataSprite(button, \"cost_text\", make_cost_display(button))\n        pizza_per_second += sprites.readDataNumber(button, \"passive_increase_values\")\n        pizza_per_second_sprite.setText(\"\" + pizza_per_second)\n        pizza_per_second_sprite.right = 162\n    }\n    \n    collider.destroy()\n})\n//  bh2\nsprites.onOverlap(SpriteKind.collider, SpriteKind.upgrade_click, function upgrade_click(collider: Sprite, button: Sprite) {\n    \n    let cost = sprites.readDataNumber(button, \"cost\")\n    if (cost > info.score()) {\n        music.buzzer.play()\n    } else {\n        pizza_per_click *= 2\n        sprites.setDataNumber(button, \"cost\", cost * 10)\n        make_click_upgrade_cost_display()\n    }\n    \n    collider.destroy()\n})\n//  /bh2\ngame.onUpdateInterval(1000, function passive_loop() {\n    info.changeScoreBy(pizza_per_second)\n})\n//  bh1\ngame.onUpdateInterval(2000, function falling_pizza() {\n    let pizza: Sprite;\n    let pizzas_to_spawn = Math.ceil(pizza_per_second / 1000)\n    pizzas_to_spawn = Math.constrain(pizzas_to_spawn, 0, 50)\n    for (let i = 0; i < pizzas_to_spawn; i++) {\n        pizza = sprites.create(assets.image`pizza`, SpriteKind.Projectile)\n        pizza.scale = 0.25\n        pizza.bottom = 1\n        pizza.x = randint(6, 154)\n        pizza.z = -100\n        pizza.vy = 5\n        pizza.setFlag(SpriteFlag.AutoDestroy, true)\n    }\n}"],[1,"music.baDing.play("],[0,")\n"]],"start1":0,"start2":0,"length1":6177,"length2":20}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"1.0\""],[-1,",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\",\n        \"arcade-sprite-data\": \"github:microsoft/arcade-sprite-data#v0.2.1\",\n        \"browser-events\": \"*\""],[0,"\n   "]],"start1":149,"start2":149,"length1":177,"length2":8},{"diffs":[[0,".ts\""],[-1,",\n        \"images.g.jres\",\n        \"images.g.ts\""],[0,"\n   "]],"start1":325,"start2":325,"length1":56,"length2":8}]},{"type":"added","filename":"images.g.jres","value":"{\n    \"image1\": {\n        \"data\": \"hwQgACAAAAAAAAAAAAAAAAAAAAAAu0REAAAAAAAAAAAAAAAAu10VQQAAAAAAAAAAAAAAS11V0eUAAAAAAAAAAAAARtRdXUHlAAAAAAAAAAAAa4dV1R1dBAAAAAAAAAAAu22HJS4dVA4AAAAAAAAAu11VViLiUlQOAAAAAAAAS+Qu1SUiIt7UTQAAAAAAuz0i4tIlIyLeTe4AAAAAQF0lIiJeJTMi3uUAAAAAsFRVJSMiXlUi4tPlAAAAAEtd1SUzIl5V5T5dBADg7k5dVdVVIuJTVVVVVAQA60vrVFXVVu0+VdVVFdQOAL5DtN5VbYfdVVXVXRVUDgC+NENLVWWHXVVV1V1BRQAAuzQzRN1VVlVVVdVWQUUAALtLM0PUVVVV7lJlh9XlAABLu0QzRF1VJSIuZYcR7QQAu7REM7RUVSIi4lUW0d1NALBLSzNDu1UyIuJV0VTkTgAAu0QzQ7vUMiPiVUFdDgAAALBLRENETi0iPlVN5QAAAAAAvkQ0tOvU7lMV1OQAAAAAAOBLRETrvt1VUdTtAAAAAAAAu0REtE7d1UXU5AAAAAAAALBLRETr1NVFTQ4AAAAAAAAAu0REu0tE1O0OAAAAAAAAAOBOtLvr1E3uAAAAAAAAAAAA7kS0u+7k7gAAAAAAAAAAAODuu+vu7g4AAAAAAAAAAAAA6+7u7u4AAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"pizza\"\n    },\n    \"image2\": {\n        \"data\": \"hwQLAAsAAABVVVVVVQUAAFVVVVVVBQAAVVVSVVUFAABVJVJVVQUAAFUiIiIiBQAAJSIiIiIFAABVIiIiIgUAAFUlUlVVBQAAVVVSVVUFAABVVVVVVQUAAFVVVVVVBQAA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"upgrade\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}"},{"type":"added","filename":"images.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myImages {\n\n    helpers._registerFactory(\"image\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"image1\":\n            case \"pizza\":return img`\n.............beebbbb............\n............eebbbb4bb...........\n............eb344bb4bb..........\n............e44334bb4bb.........\n............eb433344b4be........\n............4eb43344444be.......\n...........bd4eb43333344bb......\n..........b455d4443333444bb.....\n..........4d5555d444333444bb....\n.........4555555dd4b4443444be...\n........bd5555d555d4bb444444ee..\n........b55ddd665555bb4b44444ee.\n.......bd5555677655554ebb44444eb\n.......43222558855555d4eeb44b4ee\n......b422332ddd555222d4eebbb4be\n......be22232ed55522332db4ebbbbe\n.....bde22222e555e22232edd4bbbbe\n.....b52e222e3555e22222eddd4ebee\n....bd552eee355552e222e355544eee\n....665dd5555555552eee355dd4deee\n...6776555555555555555551554d4ee\n...4885222555dddd6655551544d4eee\n..b45522332555dd677611d444ddeee.\n..4d5222232e55555881d44ddd4eee..\n.bdd5e22222e555115114d54d4ee....\n.b55d2e222e351144d1d55eeee......\nbd5ddd2eee3d444555dd4e..........\nb555115dddd55d544eede...........\n4511d444d5544ee...4de...........\n41d4555d4ee........44...........\n41554eede.......................\n44ee...4e.......................\n`;\n            case \"image2\":\n            case \"upgrade\":return img`\n5 5 5 5 5 5 5 5 5 5 5 \n5 5 5 5 5 2 5 5 5 5 5 \n5 5 5 5 2 2 2 5 5 5 5 \n5 5 5 2 2 2 2 2 5 5 5 \n5 5 2 2 2 2 2 2 2 5 5 \n5 5 5 5 2 2 2 5 5 5 5 \n5 5 5 5 2 2 2 5 5 5 5 \n5 5 5 5 2 2 2 5 5 5 5 \n5 5 5 5 2 2 2 5 5 5 5 \n5 5 5 5 2 2 2 5 5 5 5 \n5 5 5 5 5 5 5 5 5 5 5 \n`;\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"animation\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"song\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"}]},{"timestamp":1711896818327,"editorVersion":"2.0.1","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," 0\r\n"],[-1,"mouse_x = 0\r\nmouse_y = 0\r\n"],[0,"# bh"]],"start1":208,"start2":208,"length1":34,"length2":8},{"diffs":[[0,"\r\n\r\n"],[-1,"def mouse_over_button():\r\n    temp_collider = sprites.create(image.create(1, 1))\r\n    temp_collider.image.fill(1)\r\n    temp_collider.set_position(mouse_x, mouse_y)\r\n    if temp_collider.overlaps_with(pizza_button):\r\n        pizza_button.scale = 1.1\r\n    temp_collider.destroy()\r\ngame.on_update(mouse_over_button)\r\n# /bh5\r\n\r\n"],[0,"def "]],"start1":3808,"start2":3808,"length1":332,"length2":8},{"diffs":[[0,"# /bh3\r\n"],[-1,"# bh5\r\n"],[0,"    chan"]],"start1":3883,"start2":3883,"length1":23,"length2":16},{"diffs":[[0,"pizza)\r\n"],[-1,"# /bh5\r\n"],[0,"    info"]],"start1":3907,"start2":3907,"length1":24,"length2":16},{"diffs":[[0,"\r\n\r\n"],[-1,"def mouse_move(x, y):\r\n    global mouse_x, mouse_y\r\n    mouse_x = x\r\n    mouse_y = y\r\nbrowserEvents.on_mouse_move(mouse_move)\r\n\r\n"],[0,"def "]],"start1":5479,"start2":5479,"length1":137,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 0\n"],[-1,"let mouse_x = 0\nlet mouse_y = 0\n"],[0,"//  "]],"start1":250,"start2":250,"length1":40,"length2":8},{"diffs":[[0,"e = 0.9\n"],[1,"    music.thump.play()\n"],[0,"    butt"]],"start1":3741,"start2":3741,"length1":16,"length2":39},{"diffs":[[0,"button)\n"],[-1,""],[0,"    time"]],"start1":3798,"start2":3798,"length1":16,"length2":16},{"diffs":[[0,"\n}\n\n"],[-1,"game.onUpdate(function mouse_over_button() {\n    let temp_collider = sprites.create(image.create(1, 1))\n    temp_collider.image.fill(1)\n    temp_collider.setPosition(mouse_x, mouse_y)\n    if (temp_collider.overlapsWith(pizza_button)) {\n        pizza_button.scale = 1.1\n    }\n    \n    temp_collider.destroy()\n})\n//  /bh5\n"],[0,"spri"]],"start1":3902,"start2":3902,"length1":328,"length2":8},{"diffs":[[0,"bh3\n"],[-1,"    //  bh5\n"],[0,"    "]],"start1":4069,"start2":4069,"length1":20,"length2":8},{"diffs":[[0,"za)\n"],[-1,"    //  /bh5\n"],[0,"    "]],"start1":4092,"start2":4092,"length1":21,"length2":8},{"diffs":[[0,"bh2\n"],[-1,"browserEvents.onMouseMove(function mouse_move(x: number, y: number) {\n    \n    mouse_x = x\n    mouse_y = y\n})\n"],[0,"game"]],"start1":5553,"start2":5553,"length1":118,"length2":8}]}]},{"timestamp":1711897420162,"editorVersion":"2.0.1","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"\n# bh5\r\n"],[1,"def reset_button():\r\n    buttons_to_reset.shift().scale = 1\r\n\r\ndef change_size(button: Sprite):\r\n    button.scale = 0.9\r\n    buttons_to_reset.append(button)\r\n    timer.after(100, reset_button)\r\n\r\n"],[0,"def mous"]],"start1":3634,"start2":3634,"length1":16,"length2":212},{"diffs":[[0,"    "],[-1,"    if browserEvents.mouse_left.is_pressed():\r\n            pizza_button.scale = 0.9\r\n            pause(100)\r\n            pizza_button.scale = 1\r\n    else:\r\n        pizza_button.scale = 1\r\n    temp_collider.destroy()\r\n\r\ndef setup_mouse_over_loop():\r\n    game.on_update(mouse_over_button)\r\ntimer.background(setup_mouse_over_loop"],[1,"temp_collider.destroy()\r\ngame.on_update(mouse_over_button"],[0,")\r\n#"]],"start1":4088,"start2":4088,"length1":334,"length2":65},{"diffs":[[0,"r)\r\n# /bh3\r\n"],[1,"# bh5\r\n    change_size(pizza)\r\n# /bh5\r\n"],[0,"    info.cha"]],"start1":4229,"start2":4229,"length1":24,"length2":63}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"bh5\n"],[-1,"timer.background("],[1,"function change_size(button: Sprite) {\n    button.scale = 0.9\n    buttons_to_reset.push(button)\n    timer.after(100, "],[0,"func"]],"start1":3715,"start2":3715,"length1":25,"length2":125},{"diffs":[[0,"ion "],[1,"re"],[0,"set"],[-1,"up_mouse_over_loop() {\n    "],[1,"_button() {\n        buttons_to_reset.shift().scale = 1\n    })\n}\n\n"],[0,"game"]],"start1":3841,"start2":3841,"length1":38,"length2":78},{"diffs":[[0,") {\n    "],[-1,"  "],[-1,"  "],[0,"let temp"]],"start1":3956,"start2":3956,"length1":20,"length2":16},{"diffs":[[0,"(1, 1))\n"],[-1,"    "],[0,"    temp"]],"start1":4011,"start2":4011,"length1":20,"length2":16},{"diffs":[[0,"fill(1)\n    "],[-1," "],[-1,"   "],[0,"temp_collide"]],"start1":4043,"start2":4043,"length1":28,"length2":24},{"diffs":[[0,"ouse_y)\n"],[-1,"    "],[0,"    if ("]],"start1":4091,"start2":4091,"length1":20,"length2":16},{"diffs":[[0,"ton)) {\n        "],[-1,"    "],[0,"pizza_button.sca"]],"start1":4143,"start2":4143,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"        if (browserEvents.MouseLeft.isPressed()) {\n                pizza_button.scale = 0.9\n                pause(100)\n                pizza_button.scale = 1\n            }\n            \n        } else {\n            pizza_button.scale = 1\n        }\n        \n    "],[1,"}\n    \n"],[0,"    "]],"start1":4184,"start2":4184,"length1":268,"length2":15},{"diffs":[[0,"stroy()\n"],[-1,"    })\n"],[0,"})\n//  /"]],"start1":4215,"start2":4215,"length1":23,"length2":16},{"diffs":[[0,"   //  /bh3\n"],[1,"    //  bh5\n    change_size(pizza)\n    //  /bh5\n"],[0,"    info.cha"]],"start1":4390,"start2":4390,"length1":24,"length2":72}]}]},{"timestamp":1711898034908,"editorVersion":"2.0.1","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"     if "],[-1,"not "],[0,"browserE"]],"start1":3895,"start2":3895,"length1":20,"length2":16},{"diffs":[[0," = 0.9\r\n"],[1,"            pause(100)\r\n            pizza_button.scale = 1\r\n"],[0,"    else"]],"start1":3973,"start2":3973,"length1":16,"length2":76},{"diffs":[[0,"ance"],[-1," - the clicking is funky"],[0,"\r\n# "]],"start1":6822,"start2":6822,"length1":32,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"if ("],[-1,"!"],[0,"brow"]],"start1":4076,"start2":4076,"length1":9,"length2":8},{"diffs":[[0,"e = 0.9\n"],[1,"                pause(100)\n                pizza_button.scale = 1\n"],[0,"        "]],"start1":4152,"start2":4152,"length1":16,"length2":82}]}]},{"timestamp":1711898068299,"editorVersion":"2.0.1","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"l\"><"],[-1,"variables></variables><"],[0,"bloc"]],"start1":52,"start2":52,"length1":31,"length2":8},{"diffs":[[0,"art\""],[-1," id=\"rA4IsQBsUbr04~BdpgAt\""],[0," x=\""]],"start1":77,"start2":77,"length1":34,"length2":8},{"diffs":[[0,"und\""],[-1," id=\"P;Aqg~=1@6VS8A/cT6%8\""],[0,"><fi"]],"start1":146,"start2":146,"length1":34,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":550,"start2":550,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1711895562423,"editorVersion":"2.0.1","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"mixer_play_sound\"><field name=\"sound\">music.baDing</field></block></statement></block></xml>","main.ts":"","README.md":" ","assets.json":"","main.py":"music.ba_ding.play()","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","pxt.json":"{\n    \"name\": \"with music\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"1.12.2\",\n        \"pxt\": \"8.5.2\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1711897365722,"editorVersion":"2.0.1","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"mixer_play_sound\"><field name=\"sound\">music.baDing</field></block></statement></block></xml>","main.ts":"","README.md":" ","assets.json":"","main.py":"@namespace\r\nclass SpriteKind:\r\n    buy = SpriteKind.create()\r\n    collider = SpriteKind.create()\r\n# bh2\r\n    upgrade_click = SpriteKind.create()\r\n# /bh2\r\n\r\n# variables\r\npizza_per_click = 1\r\npizza_per_second = 0\r\nmouse_x = 0\r\nmouse_y = 0\r\n# bh5\r\nbuttons_to_reset: List[Sprite] = []\r\n# /bh5\r\nstore_items: List[str] = [\r\n    \"NEW TOPPINGS\",\r\n    \"MORE OVENS\",\r\n    \"MORE WAITERS\",\r\n    \"MORE CHEFS\",\r\n# bh4\r\n    \"MORE RESTAURANTS\"\r\n# /bh4\r\n]\r\nstarting_cost = [\r\n    10,\r\n    100,\r\n    1000,\r\n    10000,\r\n# bh4\r\n    100000\r\n# /bh4\r\n]\r\npassive_increase_values = [1, 2, 5, 10, 20] # bh4\r\n\r\n# sprites\r\npizza_button = sprites.create(assets.image(\"pizza\"), SpriteKind.player)\r\npizza_button.x = 143\r\npizza_per_second_sprite = textsprite.create(str(pizza_per_second), 3, 1)\r\npizza_per_second_sprite.set_border(2, 3)\r\npizza_per_second_sprite.y = 20\r\npizza_per_second_sprite.right = 162\r\n# bh2\r\nclick_upgrade_button = sprites.create(assets.image(\"upgrade\"), SpriteKind.upgrade_click)\r\nclick_upgrade_button.scale = 2\r\nclick_upgrade_button.set_position(143, 90)\r\nsprites.set_data_number(click_upgrade_button, \"cost\", 100)\r\n# /bh2\r\n\r\n# setup\r\ninfo.set_score(0)\r\nscene.set_background_color(1)\r\n\r\n# bh2\r\ndef make_click_upgrade_cost_display():\r\n    if sprites.read_data_sprite(click_upgrade_button, \"cost_display\"):\r\n        sprites.read_data_sprite(click_upgrade_button, \"cost_display\").destroy()\r\n    cost = sprites.read_data_number(click_upgrade_button, \"cost\")\r\n    click_upgrade_cost_display = textsprite.create(str(cost), 5, 2)\r\n    click_upgrade_cost_display.set_position(143, 110)\r\nmake_click_upgrade_cost_display()\r\n# /bh2\r\n\r\ndef make_quantity_display(button: Sprite):\r\n    quantity = sprites.read_data_number(button, \"quantity\")\r\n    quantity_text = textsprite.create(str(quantity), 5, 2)\r\n    quantity_text.y = button.y + 10\r\n    quantity_text.left = 5\r\n    return quantity_text\r\n\r\ndef make_cost_display(button: Sprite):\r\n    cost = sprites.read_data_number(button, \"cost\")\r\n    cost_text = textsprite.create(str(cost), 5, 2)\r\n    cost_text.y = button.y + 10\r\n    cost_text.right = 80\r\n    return cost_text\r\n\r\ndef setup_buttons():\r\n    y = 10\r\n    for i in range(len(store_items)):\r\n        buy_button = textsprite.create(store_items[i], 5, 2)\r\n        buy_button.set_kind(SpriteKind.buy)\r\n        buy_button.set_flag(SpriteFlag.GHOST, False)\r\n        buy_button.y = y\r\n        buy_button.left = 5\r\n        sprites.set_data_number(buy_button, \"quantity\", 0)\r\n        sprites.set_data_number(buy_button, \"cost\", starting_cost[i])\r\n        sprites.set_data_number(buy_button, \"passive_increase_values\", passive_increase_values[i])\r\n        sprites.set_data_sprite(buy_button, \"quantity_text\", make_quantity_display(buy_button))\r\n        sprites.set_data_sprite(buy_button, \"cost_text\", make_cost_display(buy_button))\r\n        y += 20\r\nsetup_buttons()\r\n\r\ndef reigster_input(x, y):\r\n    collider = sprites.create(image.create(2, 2), SpriteKind.collider)\r\n    collider.set_position(x, y)\r\n    collider.image.fill(1)\r\n    collider.lifespan = 500\r\n    collider.set_flag(SpriteFlag.INVISIBLE, True)\r\nbrowserEvents.mouse_left.on_event(browserEvents.MouseButtonEvent.PRESSED, reigster_input)\r\n\r\n# bh3\r\ndef animate_click(collider: Sprite):\r\n    pizza = sprites.create(assets.image(\"pizza\"))\r\n    pizza.scale = 0.25\r\n    pizza.set_position(collider.x + 5, collider.y)\r\n    pizza.set_velocity(randint(-15, 15), -15)\r\n    pizza.ay = 50\r\n    pizza.lifespan = 1000\r\n    increase = textsprite.create(str(pizza_per_click), 0, 15)\r\n    increase.set_position(collider.x + randint(-8, 8), collider.y)\r\n    increase.vy = -5\r\n    increase.lifespan = 2000\r\n# /bh3\r\n\r\n# bh5\r\ndef mouse_over_button():\r\n    temp_collider = sprites.create(image.create(1, 1))\r\n    temp_collider.image.fill(1)\r\n    temp_collider.set_position(mouse_x, mouse_y)\r\n    if temp_collider.overlaps_with(pizza_button):\r\n        pizza_button.scale = 1.1\r\n        if browserEvents.mouse_left.is_pressed():\r\n            pizza_button.scale = 0.9\r\n    else:\r\n        pizza_button.scale = 1\r\n    temp_collider.destroy()\r\n\r\ndef setup_mouse_over_loop():\r\n    game.on_update(mouse_over_button)\r\ntimer.background(setup_mouse_over_loop)\r\n# /bh5\r\n\r\ndef click_pizza(collider, pizza):\r\n# bh3\r\n    animate_click(collider)\r\n# /bh3\r\n# bh5\r\n    change_size(pizza)\r\n# /bh5\r\n    info.change_score_by(pizza_per_click)\r\n    collider.destroy()\r\nsprites.on_overlap(SpriteKind.collider, SpriteKind.player, click_pizza)\r\n\r\ndef buy_more(collider, button):\r\n    global pizza_per_second\r\n    cost = sprites.read_data_number(button, \"cost\")\r\n    if cost > info.score():\r\n        music.buzzer.play()\r\n    else:\r\n        music.ba_ding.play()\r\n        info.change_score_by(-cost)\r\n        sprites.change_data_number_by(button, \"quantity\", 1)\r\n        sprites.read_data_sprite(button, \"quantity_text\").destroy()\r\n        sprites.set_data_sprite(button, \"quantity_text\", make_quantity_display(button))\r\n        sprites.change_data_number_by(button, \"cost\", (cost // 10) + 1)\r\n        sprites.read_data_sprite(button, \"cost_text\").destroy()\r\n        sprites.set_data_sprite(button, \"cost_text\", make_cost_display(button))\r\n        pizza_per_second += sprites.read_data_number(button, \"passive_increase_values\")\r\n        pizza_per_second_sprite.set_text(str(pizza_per_second))\r\n        pizza_per_second_sprite.right = 162\r\n    collider.destroy()\r\nsprites.on_overlap(SpriteKind.collider, SpriteKind.buy, buy_more)\r\n\r\n# bh2\r\ndef upgrade_click(collider, button):\r\n    global pizza_per_click\r\n    cost = sprites.read_data_number(button, \"cost\")\r\n    if cost > info.score():\r\n        music.buzzer.play()\r\n    else:\r\n        pizza_per_click *= 2\r\n        sprites.set_data_number(button, \"cost\", cost * 10)\r\n        make_click_upgrade_cost_display()\r\n    collider.destroy()\r\nsprites.on_overlap(SpriteKind.collider, SpriteKind.upgrade_click, upgrade_click)\r\n# /bh2\r\n\r\ndef mouse_move(x, y):\r\n    global mouse_x, mouse_y\r\n    mouse_x = x\r\n    mouse_y = y\r\nbrowserEvents.on_mouse_move(mouse_move)\r\n\r\ndef passive_loop():\r\n    info.change_score_by(pizza_per_second)\r\ngame.on_update_interval(1000, passive_loop)\r\n\r\n# bh1\r\ndef falling_pizza():\r\n    pizzas_to_spawn = Math.ceil(pizza_per_second / 1000)\r\n    pizzas_to_spawn = Math.constrain(pizzas_to_spawn, 0, 50)\r\n    for i in range(pizzas_to_spawn):\r\n        pizza = sprites.create(assets.image(\"pizza\"), SpriteKind.projectile)\r\n        pizza.scale = 0.25\r\n        pizza.bottom = 1\r\n        pizza.x = randint(6, 154)\r\n        pizza.z = -100\r\n        pizza.vy = 5\r\n        pizza.set_flag(SpriteFlag.AUTO_DESTROY, True)\r\ngame.on_update_interval(2000, falling_pizza)\r\n# /bh1\r\n\r\n\r\n# bh3 animate click\r\n# bh1 pizza falling\r\n# bh2 upgrade per click - could be the guided\r\n# db? if not show how much a click is worth\r\n\r\n# bh4 more things you can buy\r\n# bh5 button affordance\r\n# upgrade a type of thing you've bought\r\n# achievements\r\n\r\n# random star that flies in\r\n\r\n","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image1\": {\n        \"data\": \"hwQgACAAAAAAAAAAAAAAAAAAAAAAu0REAAAAAAAAAAAAAAAAu10VQQAAAAAAAAAAAAAAS11V0eUAAAAAAAAAAAAARtRdXUHlAAAAAAAAAAAAa4dV1R1dBAAAAAAAAAAAu22HJS4dVA4AAAAAAAAAu11VViLiUlQOAAAAAAAAS+Qu1SUiIt7UTQAAAAAAuz0i4tIlIyLeTe4AAAAAQF0lIiJeJTMi3uUAAAAAsFRVJSMiXlUi4tPlAAAAAEtd1SUzIl5V5T5dBADg7k5dVdVVIuJTVVVVVAQA60vrVFXVVu0+VdVVFdQOAL5DtN5VbYfdVVXVXRVUDgC+NENLVWWHXVVV1V1BRQAAuzQzRN1VVlVVVdVWQUUAALtLM0PUVVVV7lJlh9XlAABLu0QzRF1VJSIuZYcR7QQAu7REM7RUVSIi4lUW0d1NALBLSzNDu1UyIuJV0VTkTgAAu0QzQ7vUMiPiVUFdDgAAALBLRENETi0iPlVN5QAAAAAAvkQ0tOvU7lMV1OQAAAAAAOBLRETrvt1VUdTtAAAAAAAAu0REtE7d1UXU5AAAAAAAALBLRETr1NVFTQ4AAAAAAAAAu0REu0tE1O0OAAAAAAAAAOBOtLvr1E3uAAAAAAAAAAAA7kS0u+7k7gAAAAAAAAAAAODuu+vu7g4AAAAAAAAAAAAA6+7u7u4AAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"pizza\"\n    },\n    \"image2\": {\n        \"data\": \"hwQLAAsAAABVVVVVVQUAAFVVVVVVBQAAVVVSVVUFAABVJVJVVQUAAFUiIiIiBQAAJSIiIiIFAABVIiIiIgUAAFUlUlVVBQAAVVVSVVUFAABVVVVVVQUAAFVVVVVVBQAA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"upgrade\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","pxt.json":"{\n    \"name\": \"with music\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"Timers\": \"github:microsoft/arcade-timers#v1.1.0\",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\",\n        \"arcade-sprite-data\": \"github:microsoft/arcade-sprite-data#v0.2.1\",\n        \"browser-events\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"1.12.2\",\n        \"pxt\": \"8.5.2\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[]}